services:
  # PostgreSQL
  postgres:
    image: postgres:17-alpine
    env_file: ./.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ
  rabbit:
    image: rabbitmq:4.1-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD","rabbitmq-diagnostics","status"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus (metrics)
  prometheus:
    image: prom/prometheus:v2.47.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  # Loki (logs)

  # Grafana UI
  grafana:
    image: grafana/grafana:12.0.0
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  # Inventory Domain Service
  inventory-service:
    build: ./services/inventory-service
    env_file: ./services/inventory-service/.env
    ports:
      - "${INVENTORY_SERVICE_PORT}:3000"
    depends_on:
      - postgres
      - rabbit
    environment:
      - RABBITMQ_URL=amqp://rabbit:5672
      - AMQP_URL=amqp://rabbit:5672
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}

  # Order Domain Service
  order-service:
    build: ./services/order-service
    env_file: ./services/order-service/.env
    ports:
      - "${ORDER_SERVICE_PORT}:3000"
    depends_on:
      - postgres
      - rabbit

  # Inventory Client API
  inventory-api:
    build: ./clients/inventory-api
    env_file: ./clients/inventory-api/.env
    ports:
      - "${INVENTORY_API_PORT}:4001"
    depends_on:
      - inventory-service

  # Order Client API
  order-api:
    build: ./clients/order-api
    env_file: ./clients/order-api/.env
    ports:
      - "${ORDER_API_PORT}:4002"
    depends_on:
      - order-service

volumes:
  grafana-data: